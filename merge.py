import pandas as pd
import numpy as np

types = {
        "frame.encap_type" : int, 
        "frame.time" : str,
        "frame.time_epoch" : float, 
        "frame.offset_shift" : float,
        "frame.time_delta" : float,
        "frame.time_delta_displayed" : float,
        "frame.time_relative" : float, 
        "frame.number" : int, 
        "frame.len" : int,
        "frame.cap_len" : int, 
        "frame.marked" : bool,
        "frame.ignored" : bool,
        "frame.protocols" : str,
        "frame.coloring_rule.name" : str, 
        "eth.dst" : str,
        "eth.src" : str,
        "eth.type" : int,
        "ip.dsfield" : int, 
        "ip.len" : int, 
        "ip.id" : int,
        "ip.flags" : int, 
        "ip.ttl" : int, 
        "ip.proto" : int, 
        "ip.checksum" : int, 
        "ip.checksum.status" : int, 
        "ip.src" : str, 
        "ip.dst" : str,
        "tcp.srcport" : int, 
        "tcp.dstport" : int,
        "tcp.stream" : int, 
        "tcp.len" : int,
        "tcp.seq" : int, 
        "tcp.seq_raw" : int, 
        "tcp.nxtseq" : int, 
        "tcp.ack" : int, 
        "tcp.ack_raw" : int, 
        "tcp.hdr_len" : int,
        "tcp.flags" : int, 
        "tcp.window_size_value" : int,  
        "tcp.window_size" : int, 
        "tcp.window_size_scalefactor" : int, 
        "tcp.checksum" : int,
        "tcp.checksum.status" : int, 
        "tcp.urgent_pointer" : int, 
        "tcp.time_relative" : float,
        "tcp.time_delta" : float,
        "tcp.analysis.bytes_in_flight" : int, 
        "tcp.analysis.push_bytes_sent" : int, 
        "udp.srcport" : int, 
        "udp.dstport" : int,
        "udp.length" : int,
        "udp.checksum" : int, 
        "udp.checksum" : int, 
        "udp.time_relative" : float, 
        "udp.time_delta" : float,
        "Malware" : str
}

# merging two csv files
#df = pd.concat(
#    map(pd.read_csv, ['mirai_mal_CC_all_new.csv', 'mirai_mal_spread_all_new.csv']), ignore_index=True)

cc = pd.read_csv("mirai_mal_CC_all_new.csv", dtype={"frame.encap_type" : int,
        "frame.time" : str,
        "frame.time_epoch" : float,
        "frame.offset_shift" : float,
        "frame.time_delta" : float,
        "frame.time_delta_displayed" : float,
        "frame.time_relative" : float,
        "frame.number" : int,
        "frame.len" : int,
        "frame.cap_len" : int,
        "frame.marked" : bool,
        "frame.ignored" : bool,
        "frame.protocols" : str,
        "frame.coloring_rule.name" : str,
        "eth.dst" : str,
        "eth.src" : str,
        "eth.type" : int,
        "ip.dsfield" : int,
        "ip.len" : int,
        "ip.id" : int,
        "ip.flags" : int,
        "ip.ttl" : int,
        "ip.proto" : int,
        "ip.checksum" : int,
        "ip.checksum.status" : int,
        "ip.src" : str,
        "ip.dst" : str,
        "tcp.srcport" : int,
        "tcp.dstport" : int,
        "tcp.stream" : int,
        "tcp.len" : int,
        "tcp.seq" : int,
        "tcp.seq_raw" : int,
        "tcp.nxtseq" : int,
        "tcp.ack" : int,
        "tcp.ack_raw" : int,
        "tcp.hdr_len" : int,
        "tcp.flags" : int,
        "tcp.window_size_value" : int,
        "tcp.window_size" : int,
        "tcp.window_size_scalefactor" : int,
        "tcp.checksum" : int,
        "tcp.checksum.status" : int,
        "tcp.urgent_pointer" : int,
        "tcp.time_relative" : float,
        "tcp.time_delta" : float,
        "tcp.analysis.bytes_in_flight" : int,
        "tcp.analysis.push_bytes_sent" : int,
        "udp.srcport" : int,
        "udp.dstport" : int,
        "udp.length" : int,
        "udp.checksum" : int,
        "udp.checksum" : int,
        "udp.time_relative" : float,
        "udp.time_delta" : float,
        "Malware" : str})
spread = pd.read_csv("mirai_mal_spread_all_new.csv", dtype={"frame.encap_type" : int, 
        "frame.time" : str,"frame.time_epoch" : float,
        "frame.offset_shift" : float,
        "frame.time_delta" : float,
        "frame.time_delta_displayed" : float,
        "frame.time_relative" : float,
        "frame.number" : int,
        "frame.len" : int,
        "frame.cap_len" : int,
        "frame.marked" : bool,
        "frame.ignored" : bool,
        "frame.protocols" : str,
        "frame.coloring_rule.name" : str,
        "eth.dst" : str,
        "eth.src" : str,
        "eth.type" : int,
        "ip.dsfield" : int,
        "ip.len" : int,
        "ip.id" : int,
        "ip.flags" : int,
        "ip.ttl" : int,
        "ip.proto" : int,
        "ip.checksum" : int,
        "ip.checksum.status" : int,
        "ip.src" : str,
        "ip.dst" : str,
        "tcp.srcport" : int,
        "tcp.dstport" : int,
        "tcp.stream" : int,
        "tcp.len" : int,
        "tcp.seq" : int,
        "tcp.seq_raw" : int,
        "tcp.nxtseq" : int,
        "tcp.ack" : int,
        "tcp.ack_raw" : int,
        "tcp.hdr_len" : int,
        "tcp.flags" : int,
        "tcp.window_size_value" : int,
        "tcp.window_size" : int,
        "tcp.window_size_scalefactor" : int,
        "tcp.checksum" : int,
        "tcp.checksum.status" : int,
        "tcp.urgent_pointer" : int,
        "tcp.time_relative" : float,
        "tcp.time_delta" : float,
        "tcp.analysis.bytes_in_flight" : int,
        "tcp.analysis.push_bytes_sent" : int,
        "udp.srcport" : int,
        "udp.dstport" : int,
        "udp.length" : int,
        "udp.checksum" : int,
        "udp.checksum" : int,
        "udp.time_relative" : float,
        "udp.time_delta" : float,
        "Malware" : str})

mirai_mal_all = pd.concat([cc, spread])
